{"ast":null,"code":"var _jsxFileName = \"/Users/vladyslavzuiev/Desktop/Udemy/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport CollectionsOverView from '../../components/collections-overview/collecitons-overview.component';\nimport { Route } from 'react-router-dom';\nimport CategoryPage from '../collection/collection.component';\nimport { connect } from 'react-redux';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverView);\nconst CollectionPageWithSpinner = WithSpinner(CategoryPage);\n\nclass ShopPage extends React.Component {\n  constructor() {\n    super();\n    this.usubscribeFromSnapshot = null;\n    this.state = {\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    const updateCollections = this.props.updateCollections;\n    const collectionRef = firestore.collection('collections');\n    this.usubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const match = this.props.match;\n    const loading = this.state.loading;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      render: props => React.createElement(CollectionOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      component: CategoryPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/vladyslavzuiev/Desktop/Udemy/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","CollectionsOverView","Route","CategoryPage","connect","updateCollections","firestore","convertCollectionsSnapshotToMap","WithSpinner","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","constructor","usubscribeFromSnapshot","state","loading","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionMap","setState","render","match","path","mapDispatchToProps","dispatch","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,YAAP,MAAyB,oCAAzB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,MAAMC,6BAA6B,GAAGD,WAAW,CAACP,mBAAD,CAAjD;AACA,MAAMS,yBAAyB,GAAGF,WAAW,CAACL,YAAD,CAA7C;;AAGA,MAAMQ,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AACnCC,EAAAA,WAAW,GAAE;AACT;AADS,SAObC,sBAPa,GAOY,IAPZ;AAGT,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE;AADA,KAAb;AAGH;;AAGDC,EAAAA,iBAAiB,GAAE;AAAA,UACPZ,iBADO,GACe,KAAKa,KADpB,CACPb,iBADO;AAEf,UAAMc,aAAa,GAAGb,SAAS,CAACc,UAAV,CAAqB,aAArB,CAAtB;AAEA,SAAKN,sBAAL,GAA8BK,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACrE,YAAMC,aAAa,GAAGhB,+BAA+B,CAACe,QAAD,CAArD;AACAjB,MAAAA,iBAAiB,CAACkB,aAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAACR,QAAAA,OAAO,EAAE;AAAV,OAAd;AACH,KAJ6B,CAA9B;AAKH;;AAEDS,EAAAA,MAAM,GAAG;AAAA,UACGC,KADH,GACa,KAAKR,KADlB,CACGQ,KADH;AAAA,UAEGV,OAFH,GAEe,KAAKD,KAFpB,CAEGC,OAFH;AAGL,WAAQ;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACJ,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,YAAKU,KAAK,CAACC,IAAX,CAAjB;AAAoC,MAAA,MAAM,EAAGT,KAAD,IAAW,oBAAC,6BAAD;AAA+B,QAAA,SAAS,EAAEF;AAA1C,SAAuDE,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADI,EAEJ,oBAAC,KAAD;AAAO,MAAA,IAAI,YAAKQ,KAAK,CAACC,IAAX,mBAAX;AAA4C,MAAA,SAAS,EAAExB,YAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFI,CAAR;AAKH;;AA7BkC;;AAiCvC,MAAMyB,kBAAkB,GAAGC,QAAQ,KAAK;AACpCxB,EAAAA,iBAAiB,EAAEyB,cAAc,IAAID,QAAQ,CAACxB,iBAAiB,CAACyB,cAAD,CAAlB;AADT,CAAL,CAAnC;;AAIA,eAAe1B,OAAO,CAAC,IAAD,EAAOwB,kBAAP,CAAP,CAAkCjB,QAAlC,CAAf","sourcesContent":["import React from 'react';\r\nimport CollectionsOverView from '../../components/collections-overview/collecitons-overview.component';\r\nimport { Route } from 'react-router-dom';\r\nimport CategoryPage from '../collection/collection.component'\r\nimport {connect} from 'react-redux'\r\nimport { updateCollections } from '../../redux/shop/shop.actions';\r\n \r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'\r\n\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\r\n\r\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverView);\r\nconst CollectionPageWithSpinner = WithSpinner(CategoryPage);\r\n\r\n\r\nclass ShopPage extends React.Component {\r\n    constructor(){\r\n        super()\r\n\r\n        this.state = {\r\n            loading: true\r\n        }\r\n    }\r\n    usubscribeFromSnapshot = null;\r\n\r\n    componentDidMount(){\r\n        const { updateCollections } = this.props;\r\n        const collectionRef = firestore.collection('collections');\r\n\r\n        this.usubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\r\n            const collectionMap = convertCollectionsSnapshotToMap(snapshot);\r\n            updateCollections(collectionMap);\r\n            this.setState({loading: false});\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { match } = this.props;\r\n        const { loading } = this.state;\r\n        return (<div className='shop-page'>\r\n            <Route exact path={`${match.path}`} render={(props) => <CollectionOverviewWithSpinner isLoading={loading} {...props}/> } />\r\n            <Route path={`${match.path}/:collectionId`} component={CategoryPage} />\r\n        </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}
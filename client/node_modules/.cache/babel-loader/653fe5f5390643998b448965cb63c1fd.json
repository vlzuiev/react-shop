{"ast":null,"code":"var _jsxFileName = \"/Users/vladyslavzuiev/Desktop/Udemy/crwn-clothing/src/components/cart-dropdown/cart-dropdown.component.jsx\";\nimport React from 'react';\nimport CustomButton from '../custom-button/cutom-button.component';\nimport './cart-dropdown.styles.scss';\nimport CartItem from '../cart-item/cart-item.component';\nimport { connect } from 'react-redux';\nimport { selectCartItems } from '../../redux/cart/car.selectors';\nimport { createStructuredSelector } from 'reselect';\nimport { withRouter } from 'react-router-dom';\nimport { toggleCartHidden } from '../../redux/cart/car.action';\n\nconst CartDropDown = ({\n  cartItems,\n  history\n}) => {\n  return React.createElement(\"div\", {\n    className: \"cart-dropdown\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"cart-items\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, cartItems.length ? cartItems.map(item => React.createElement(CartItem, {\n    key: item.id,\n    item: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  })) : React.createElement(\"span\", {\n    className: \"empty-message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Your cart is empty \")), React.createElement(CustomButton, {\n    onClick: () => history.push('/checkout'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"GO TO CHECKOUT\"));\n};\n\nconst mapDispatchToSate = dispatch => ({\n  toogleHidden: () => dispatch(toggleCartHidden)\n});\n\nconst mapStateToProps = createStructuredSelector({\n  cartItems: selectCartItems\n});\nexport default withRouter(connect(mapStateToProps)(CartDropDown));","map":{"version":3,"sources":["/Users/vladyslavzuiev/Desktop/Udemy/crwn-clothing/src/components/cart-dropdown/cart-dropdown.component.jsx"],"names":["React","CustomButton","CartItem","connect","selectCartItems","createStructuredSelector","withRouter","toggleCartHidden","CartDropDown","cartItems","history","length","map","item","id","push","mapDispatchToSate","dispatch","toogleHidden","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,yCAAzB;AACA,OAAO,6BAAP;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,eAAR,QAA8B,gCAA9B;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AAEA,SAAQC,gBAAR,QAA+B,6BAA/B;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA;AAAZ,CAAD,KAA0B;AAC3C,SAAO;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQD,SAAS,CAACE,MAAV,GACEF,SAAS,CAACG,GAAV,CAAeC,IAAI,IAAI,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,IAAI,CAACC,EAApB;AAAwB,IAAA,IAAI,EAAED,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAvB,CADF,GAEE;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAJV,CADG,EAQH,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAE,MAAMH,OAAO,CAACK,IAAR,CAAa,WAAb,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBARG,CAAP;AAUH,CAXD;;AAYA,MAAMC,iBAAiB,GAAIC,QAAD,KAAe;AACrCC,EAAAA,YAAY,EAAE,MAAMD,QAAQ,CAACV,gBAAD;AADS,CAAf,CAA1B;;AAIA,MAAMY,eAAe,GAAGd,wBAAwB,CAAC;AAC7CI,EAAAA,SAAS,EAAEL;AADkC,CAAD,CAAhD;AAIA,eAAeE,UAAU,CAACH,OAAO,CAACgB,eAAD,CAAP,CAAyBX,YAAzB,CAAD,CAAzB","sourcesContent":["import React from 'react';\nimport CustomButton from '../custom-button/cutom-button.component';\nimport './cart-dropdown.styles.scss';\nimport CartItem from '../cart-item/cart-item.component'\nimport { connect } from 'react-redux';\nimport {selectCartItems} from '../../redux/cart/car.selectors'\nimport {createStructuredSelector} from 'reselect'\nimport {withRouter} from 'react-router-dom';\n\nimport {toggleCartHidden} from '../../redux/cart/car.action';\n \nconst CartDropDown = ({cartItems, history}) => {\n    return <div className='cart-dropdown'>\n        <div className='cart-items'>\n            {\n                cartItems.length \n                ? cartItems.map( item => <CartItem key={item.id} item={item}/>)\n                : <span className='empty-message'>Your cart is empty </span>\n            } \n        </div>\n        <CustomButton onClick={() => history.push('/checkout')}>GO TO CHECKOUT</CustomButton>\n    </div>\n}\nconst mapDispatchToSate = (dispatch) => ({\n    toogleHidden: () => dispatch(toggleCartHidden)\n});\n\nconst mapStateToProps = createStructuredSelector({\n    cartItems: selectCartItems\n});\n\nexport default withRouter(connect(mapStateToProps)(CartDropDown));"]},"metadata":{},"sourceType":"module"}
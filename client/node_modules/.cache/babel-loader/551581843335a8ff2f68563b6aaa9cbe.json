{"ast":null,"code":"import _objectSpread from \"/Users/vladyslavzuiev/Desktop/Udemy/crwn-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBfu9wpv60Z5uYXbFJod7rQwIr_Pf8-Rek\",\n  authDomain: \"firstprj-cbc75.firebaseapp.com\",\n  databaseURL: \"https://firstprj-cbc75.firebaseio.com\",\n  projectId: \"firstprj-cbc75\",\n  storageBucket: \"firstprj-cbc75.appspot.com\",\n  messagingSenderId: \"11013486235\",\n  appId: \"1:11013486235:web:aa5f789f6814a6dbfef83e\",\n  measurementId: \"G-FXK8Y532CX\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const displayName = userAuth.displayName,\n          email = userAuth.email;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set(_objectSpread({\n        displayName,\n        email,\n        createdAt\n      }, additionalData));\n    } catch (err) {\n      console.log(`Error during creation: ${err}`);\n    }\n  }\n\n  return userRef;\n};\nexport const convertCollectionsSnapshotToMap = collections => {\n  const transformedCollection = collections.docs.map(doc => {\n    const _doc$data = doc.data(),\n          title = _doc$data.title,\n          items = _doc$data.items;\n\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n  return transformedCollection.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n};\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  promt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\nexport default firebase;","map":{"version":3,"sources":["/Users/vladyslavzuiev/Desktop/Udemy/crwn-clothing/src/firebase/firebase.utils.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","err","console","log","convertCollectionsSnapshotToMap","collections","transformedCollection","docs","map","data","title","items","routeName","encodeURI","toLowerCase","id","reduce","accumulator","collection","getCurrentUser","Promise","resolve","reject","unsubscribe","auth","onAuthStateChanged","initializeApp","googleProvider","GoogleAuthProvider","setCustomParameters","promt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth'; \n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBfu9wpv60Z5uYXbFJod7rQwIr_Pf8-Rek\",\n    authDomain: \"firstprj-cbc75.firebaseapp.com\",\n    databaseURL: \"https://firstprj-cbc75.firebaseio.com\",\n    projectId: \"firstprj-cbc75\",\n    storageBucket: \"firstprj-cbc75.appspot.com\",\n    messagingSenderId: \"11013486235\",\n    appId: \"1:11013486235:web:aa5f789f6814a6dbfef83e\",\n    measurementId: \"G-FXK8Y532CX\"\n  };\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if(!userAuth) return;\n \n  const userRef = firestore.doc(`users/${userAuth.uid}`); \n  const snapShot = await userRef.get();  \n\n  if(!snapShot.exists){\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n\n    try{\n      await userRef.set({displayName, email, createdAt, ...additionalData})\n    }\n    catch(err){\n      console.log(`Error during creation: ${err}`);\n    }\n  } \n  return userRef;\n}\n\nexport const convertCollectionsSnapshotToMap = (collections) => {\n  const transformedCollection = collections.docs.map(doc => {\n    const { title, items } = doc.data();\n\n    return{\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n\n    }\n  }); \n\n  return transformedCollection.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n}\n\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject)\n  });\n}\n \n\nfirebase.initializeApp(firebaseConfig);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({promt: 'select_account'});\n\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\n\nexport default firebase;"]},"metadata":{},"sourceType":"module"}
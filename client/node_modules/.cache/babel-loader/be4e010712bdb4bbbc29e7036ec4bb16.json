{"ast":null,"code":"import _objectSpread from \"/Users/vladyslavzuiev/Desktop/Udemy/crwn-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserTypes from './user.types';\nimport { googleProvider, auth, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nimport { signInSuccess, signInFailure, signOutFailure, signOutSuccess } from './user.action';\nimport UserActionTypes from './user.types';\nexport function* getSnapshotFromUserAuth(userAuth) {\n  const userRef = yield call(createUserProfileDocument, userAuth);\n  const userSnapshot = yield userRef.get();\n  yield put(signInSuccess(_objectSpread({\n    id: userSnapshot.id\n  }, userSnapshot.data())));\n}\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (err) {\n    yield put(signInFailure(err));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (err) {\n    yield put(signInFailure(err));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (err) {\n    yield put(signInFailure(err));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (err) {\n    yield put(signOutFailure(err));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart)]);\n}\nexport default userSagas;","map":{"version":3,"sources":["/Users/vladyslavzuiev/Desktop/Udemy/crwn-clothing/src/redux/user/user.saga.js"],"names":["takeLatest","put","all","call","UserTypes","googleProvider","auth","createUserProfileDocument","getCurrentUser","signInSuccess","signInFailure","signOutFailure","signOutSuccess","UserActionTypes","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","signInWithGoogle","signInWithPopup","user","err","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","signOut","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","signUp","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserTypes from './user.types';\nimport { googleProvider, auth, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nimport { signInSuccess, signInFailure, signOutFailure, signOutSuccess } from './user.action';\nimport UserActionTypes from './user.types';\n\n\nexport function* getSnapshotFromUserAuth(userAuth){\n    const userRef = yield call(createUserProfileDocument, userAuth);\n\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data()}));\n \n}\n\nexport function* signInWithGoogle() {\n    try {\n        const {user} = yield auth.signInWithPopup(googleProvider);\n        yield getSnapshotFromUserAuth(user);\n    } catch (err) {\n        yield put(signInFailure(err))\n    }\n}\n\nexport function* signInWithEmail({ payload: { email, password }}){\n    try{\n        const { user } = yield auth.signInWithEmailAndPassword(email, password);\n        yield getSnapshotFromUserAuth(user);\n    }catch(err){\n        yield put(signInFailure(err))\n    }\n}\n\nexport function* isUserAuthenticated(){\n    try{\n        const userAuth = yield getCurrentUser(); \n        if(!userAuth) return; \n        yield getSnapshotFromUserAuth(userAuth);\n    }catch(err){\n        yield put(signInFailure(err));\n    }\n}\n\nexport function* signOut(){\n    try{\n        yield auth.signOut();\n        yield put(signOutSuccess());\n    }catch(err){\n        yield put(signOutFailure(err));\n    }\n}\n\nexport function* onGoogleSignInStart() {\n    yield takeLatest(\n        UserTypes.GOOGLE_SIGN_IN_START,\n        signInWithGoogle\n    );\n}\n\nexport function* onEmailSignInStart(){\n    yield takeLatest(\n        UserTypes.EMAIL_SIGN_IN_START,\n        signInWithEmail\n    );\n}\n\nexport function* onCheckUserSession() {\n    yield takeLatest(\n        UserTypes.CHECK_USER_SESSION,\n        isUserAuthenticated \n    )\n}\n\nexport function* onSignOutStart(){\n    yield takeLatest(\n        UserActionTypes.SIGN_OUT_START,\n        signOut\n    )\n} \n\nexport function* onSignUpStart(){\n    yield takeLatest(\n        UserActionTypes.SIGN_UP_START,\n        signUp\n    )\n}\n\nexport function* userSagas() {\n    yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart)])\n}\n\n\nexport default userSagas;"]},"metadata":{},"sourceType":"module"}
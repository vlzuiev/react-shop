{"ast":null,"code":"import _objectSpread from \"/Users/vladyslavzuiev/Desktop/Udemy/crwn-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserTypes from './user.types';\nimport { googleProvider, auth, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nimport { signInSuccess, signInFailure, signOutFailure, signOutSuccess, signUpFailure } from './user.action';\nimport UserActionTypes from './user.types';\n\nfunction* getSnapshotFromUserAuth(userAuth) {\n  const userRef = yield call(createUserProfileDocument, userAuth);\n  const userSnapshot = yield userRef.get();\n  yield put(signInSuccess(_objectSpread({\n    id: userSnapshot.id\n  }, userSnapshot.data())));\n}\n\nfunction* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (err) {\n    yield put(signInFailure(err));\n  }\n}\n\nfunction* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (err) {\n    yield put(signInFailure(err));\n  }\n}\n\nfunction* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (err) {\n    yield put(signInFailure(err));\n  }\n}\n\nfunction* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (err) {\n    yield put(signOutFailure(err));\n  }\n}\n\nfunction* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    console.log(email, password, displayName);\n\n    const _ref3 = yield auth.createUserWithEmailAndPassword(email, password),\n          user = _ref3.user;\n\n    yield createUserProfileDocument(user, {\n      displayName\n    });\n    yield getSnapshotFromUserAuth(user);\n  } catch (err) {\n    yield put(signUpFailure(err));\n  }\n}\n\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onSignUpStart)]);\n}\nexport default userSagas;","map":{"version":3,"sources":["/Users/vladyslavzuiev/Desktop/Udemy/crwn-clothing/src/redux/user/user.saga.js"],"names":["takeLatest","put","all","call","UserTypes","googleProvider","auth","createUserProfileDocument","getCurrentUser","signInSuccess","signInFailure","signOutFailure","signOutSuccess","signUpFailure","UserActionTypes","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","signInWithGoogle","signInWithPopup","user","err","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","signOut","signUp","displayName","console","log","createUserWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","userSagas"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAASC,cAAT,EAAyBC,IAAzB,EAA+BC,yBAA/B,EAA0DC,cAA1D,QAAgF,+BAAhF;AACA,SAASC,aAAT,EAAwBC,aAAxB,EAAuCC,cAAvC,EAAuDC,cAAvD,EAAuEC,aAAvE,QAA4F,eAA5F;AACA,OAAOC,eAAP,MAA4B,cAA5B;;AAGA,UAAUC,uBAAV,CAAkCC,QAAlC,EAA2C;AACvC,QAAMC,OAAO,GAAG,MAAMd,IAAI,CAACI,yBAAD,EAA4BS,QAA5B,CAA1B;AAEA,QAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,QAAMlB,GAAG,CAACQ,aAAa;AAAGW,IAAAA,EAAE,EAAEF,YAAY,CAACE;AAApB,KAA2BF,YAAY,CAACG,IAAb,EAA3B,EAAd,CAAT;AAEH;;AAED,UAAUC,gBAAV,GAA6B;AACzB,MAAI;AAAA,iBACe,MAAMhB,IAAI,CAACiB,eAAL,CAAqBlB,cAArB,CADrB;AAAA,UACOmB,IADP,QACOA,IADP;;AAEA,UAAMT,uBAAuB,CAACS,IAAD,CAA7B;AACH,GAHD,CAGE,OAAOC,GAAP,EAAY;AACV,UAAMxB,GAAG,CAACS,aAAa,CAACe,GAAD,CAAd,CAAT;AACH;AACJ;;AAED,UAAUC,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA0D;AACtD,MAAG;AAAA,kBACkB,MAAMvB,IAAI,CAACwB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CADxB;AAAA,UACSL,IADT,SACSA,IADT;;AAEC,UAAMT,uBAAuB,CAACS,IAAD,CAA7B;AACH,GAHD,CAGC,OAAMC,GAAN,EAAU;AACP,UAAMxB,GAAG,CAACS,aAAa,CAACe,GAAD,CAAd,CAAT;AACH;AACJ;;AAED,UAAUM,mBAAV,GAA+B;AAC3B,MAAG;AACC,UAAMf,QAAQ,GAAG,MAAMR,cAAc,EAArC;AACA,QAAG,CAACQ,QAAJ,EAAc;AACd,UAAMD,uBAAuB,CAACC,QAAD,CAA7B;AACH,GAJD,CAIC,OAAMS,GAAN,EAAU;AACP,UAAMxB,GAAG,CAACS,aAAa,CAACe,GAAD,CAAd,CAAT;AACH;AACJ;;AAED,UAAUO,OAAV,GAAmB;AACf,MAAG;AACC,UAAM1B,IAAI,CAAC0B,OAAL,EAAN;AACA,UAAM/B,GAAG,CAACW,cAAc,EAAf,CAAT;AACH,GAHD,CAGC,OAAMa,GAAN,EAAU;AACP,UAAMxB,GAAG,CAACU,cAAc,CAACc,GAAD,CAAf,CAAT;AACH;AACJ;;AAED,UAAUQ,MAAV,CAAiB;AAACN,EAAAA,OAAO,EAAE;AAACC,IAAAA,KAAD;AAAQC,IAAAA,QAAR;AAAkBK,IAAAA;AAAlB;AAAV,CAAjB,EAA2D;AACvD,MAAG;AACCC,IAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ,EAAmBC,QAAnB,EAA6BK,WAA7B;;AADD,kBAEkB,MAAM5B,IAAI,CAAC+B,8BAAL,CAAoCT,KAApC,EAA2CC,QAA3C,CAFxB;AAAA,UAESL,IAFT,SAESA,IAFT;;AAIC,UAAMjB,yBAAyB,CAAEiB,IAAF,EAAQ;AAACU,MAAAA;AAAD,KAAR,CAA/B;AACA,UAAMnB,uBAAuB,CAACS,IAAD,CAA7B;AACH,GAND,CAOA,OAAMC,GAAN,EAAU;AACN,UAAMxB,GAAG,CAACY,aAAa,CAACY,GAAD,CAAd,CAAT;AACH;AACJ;;AAED,OAAO,UAAUa,mBAAV,GAAgC;AACnC,QAAMtC,UAAU,CACZI,SAAS,CAACmC,oBADE,EAEZjB,gBAFY,CAAhB;AAIH;AAED,OAAO,UAAUkB,kBAAV,GAA8B;AACjC,QAAMxC,UAAU,CACZI,SAAS,CAACqC,mBADE,EAEZf,eAFY,CAAhB;AAIH;AAED,OAAO,UAAUgB,kBAAV,GAA+B;AAClC,QAAM1C,UAAU,CACZI,SAAS,CAACuC,kBADE,EAEZZ,mBAFY,CAAhB;AAIH;AAED,OAAO,UAAUa,cAAV,GAA0B;AAC7B,QAAM5C,UAAU,CACZc,eAAe,CAAC+B,cADJ,EAEZb,OAFY,CAAhB;AAIH;AAED,OAAO,UAAUc,aAAV,GAAyB;AAC5B,QAAM9C,UAAU,CACZc,eAAe,CAACiC,aADJ,EAEZd,MAFY,CAAhB;AAIH;AAED,OAAO,UAAUe,SAAV,GAAsB;AACzB,QAAM9C,GAAG,CAAC,CAACC,IAAI,CAACmC,mBAAD,CAAL,EAA4BnC,IAAI,CAACqC,kBAAD,CAAhC,EAAsDrC,IAAI,CAACuC,kBAAD,CAA1D,EAAgFvC,IAAI,CAACyC,cAAD,CAApF,EAAsGzC,IAAI,CAAC2C,aAAD,CAA1G,CAAD,CAAT;AACH;AAGD,eAAeE,SAAf","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserTypes from './user.types';\nimport { googleProvider, auth, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nimport { signInSuccess, signInFailure, signOutFailure, signOutSuccess, signUpFailure } from './user.action';\nimport UserActionTypes from './user.types';\n\n\nfunction* getSnapshotFromUserAuth(userAuth){\n    const userRef = yield call(createUserProfileDocument, userAuth);\n\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data()}));\n \n}\n\nfunction* signInWithGoogle() {\n    try {\n        const {user} = yield auth.signInWithPopup(googleProvider);\n        yield getSnapshotFromUserAuth(user);\n    } catch (err) {\n        yield put(signInFailure(err))\n    }\n}\n\nfunction* signInWithEmail({ payload: { email, password }}){\n    try{\n        const { user } = yield auth.signInWithEmailAndPassword(email, password);\n        yield getSnapshotFromUserAuth(user);\n    }catch(err){\n        yield put(signInFailure(err))\n    }\n}\n\nfunction* isUserAuthenticated(){\n    try{\n        const userAuth = yield getCurrentUser(); \n        if(!userAuth) return; \n        yield getSnapshotFromUserAuth(userAuth);\n    }catch(err){\n        yield put(signInFailure(err));\n    }\n}\n\nfunction* signOut(){\n    try{\n        yield auth.signOut();\n        yield put(signOutSuccess());\n    }catch(err){\n        yield put(signOutFailure(err));\n    }\n}\n\nfunction* signUp({payload: {email, password, displayName}}){  \n    try{ \n        console.log(email, password, displayName);\n        const { user } = yield auth.createUserWithEmailAndPassword(email, password);\n\n        yield createUserProfileDocument( user, {displayName});\n        yield getSnapshotFromUserAuth(user); \n    }\n    catch(err){\n        yield put(signUpFailure(err));\n    }\n}\n\nexport function* onGoogleSignInStart() {\n    yield takeLatest(\n        UserTypes.GOOGLE_SIGN_IN_START,\n        signInWithGoogle\n    );\n}\n\nexport function* onEmailSignInStart(){\n    yield takeLatest(\n        UserTypes.EMAIL_SIGN_IN_START,\n        signInWithEmail\n    );\n}\n\nexport function* onCheckUserSession() {\n    yield takeLatest(\n        UserTypes.CHECK_USER_SESSION,\n        isUserAuthenticated \n    )\n}\n\nexport function* onSignOutStart(){\n    yield takeLatest(\n        UserActionTypes.SIGN_OUT_START,\n        signOut\n    )\n} \n\nexport function* onSignUpStart(){\n    yield takeLatest(\n        UserActionTypes.SIGN_UP_START,\n        signUp\n    )\n}\n\nexport function* userSagas() {\n    yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onSignUpStart)])\n}\n\n\nexport default userSagas;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { takeEvery, call, put } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport ShopActionTypes from './shop.types';\nimport { fetchCollecitonsSuccess, fetchCollectionsFailure } from './shop.actions';\n\nfunction* fetchCollectionsAsync() {\n  yield console.log('here');\n\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollecitonsSuccess(collectionsMap));\n  } catch (err) {\n    yield put(fetchCollectionsFailure(err.message));\n  }\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTION_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/vladyslavzuiev/Desktop/Udemy/crwn-clothing/src/redux/shop/shop.saga.js"],"names":["takeEvery","call","put","firestore","convertCollectionsSnapshotToMap","ShopActionTypes","fetchCollecitonsSuccess","fetchCollectionsFailure","fetchCollectionsAsync","console","log","collectionRef","collection","snapshot","get","collectionsMap","err","message","fetchCollectionsStart","FETCH_COLLECTION_START"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,IAApB,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAAQC,uBAAR,EAAiCC,uBAAjC,QAA+D,gBAA/D;;AAEA,UAAUC,qBAAV,GAAiC;AAC7B,QAAMC,OAAO,CAACC,GAAR,CAAY,MAAZ,CAAN;;AACA,MAAG;AACC,UAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMd,IAAI,CAACG,+BAAD,EAAkCS,QAAlC,CAAjC;AACA,UAAMX,GAAG,CAACI,uBAAuB,CAACS,cAAD,CAAxB,CAAT;AACH,GALD,CAKC,OAAMC,GAAN,EAAU;AACP,UAAMd,GAAG,CAACK,uBAAuB,CAACS,GAAG,CAACC,OAAL,CAAxB,CAAT;AACH;AACJ;;AAED,OAAO,UAAUC,qBAAV,GAAiC;AACpC,QAAMlB,SAAS,CACXK,eAAe,CAACc,sBADL,EAEXX,qBAFW,CAAf;AAIH","sourcesContent":["import { takeEvery, call, put } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'\nimport ShopActionTypes from './shop.types';\nimport {fetchCollecitonsSuccess, fetchCollectionsFailure} from './shop.actions';\n\nfunction* fetchCollectionsAsync(){\n    yield console.log('here') \n    try{\n        const collectionRef = firestore.collection('collections');\n        const snapshot = yield collectionRef.get();\n        const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n        yield put(fetchCollecitonsSuccess(collectionsMap));\n    }catch(err){\n        yield put(fetchCollectionsFailure(err.message));\n    } \n}\n\nexport function* fetchCollectionsStart(){\n    yield takeEvery(\n        ShopActionTypes.FETCH_COLLECTION_START, \n        fetchCollectionsAsync\n    );\n}"]},"metadata":{},"sourceType":"module"}
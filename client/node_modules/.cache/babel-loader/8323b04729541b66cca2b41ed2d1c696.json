{"ast":null,"code":"import { takeEvery } from 'redux-saga/effects';\nimport { firestore } from '../../firebase/firebase.utils';\nimport ShopActionTypes from './shop.types';\n\nfunction* fetchCollectionsAsync() {\n  yield console.log('here');\n  const collectionRef = firestore.collection('collections');\n  collectionRef.get().then(snapshot => {\n    const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n    dispatch(fetchCollecitonsSuccess(collectionMap));\n  }).catch(err => dispatch(fetchCollectionsFailure(err)));\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTION_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/vladyslavzuiev/Desktop/Udemy/crwn-clothing/src/redux/shop/shop.saga.js"],"names":["takeEvery","firestore","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","collection","get","then","snapshot","collectionMap","convertCollectionsSnapshotToMap","dispatch","fetchCollecitonsSuccess","catch","err","fetchCollectionsFailure","fetchCollectionsStart","FETCH_COLLECTION_START"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AACA,SAASC,SAAT,QAA0B,+BAA1B;AACA,OAAOC,eAAP,MAA4B,cAA5B;;AAEA,UAAUC,qBAAV,GAAiC;AAC7B,QAAMC,OAAO,CAACC,GAAR,CAAY,MAAZ,CAAN;AACA,QAAMC,aAAa,GAAGL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAAtB;AAGAD,EAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACjC,UAAMC,aAAa,GAAGC,+BAA+B,CAACF,QAAD,CAArD;AACAG,IAAAA,QAAQ,CAACC,uBAAuB,CAACH,aAAD,CAAxB,CAAR;AACH,GAHD,EAGGI,KAHH,CAGSC,GAAG,IAAIH,QAAQ,CAACI,uBAAuB,CAACD,GAAD,CAAxB,CAHxB;AAIH;;AAED,OAAO,UAAUE,qBAAV,GAAiC;AACpC,QAAMlB,SAAS,CACXE,eAAe,CAACiB,sBADL,EAEXhB,qBAFW,CAAf;AAIH","sourcesContent":["import { takeEvery } from 'redux-saga/effects';\nimport { firestore } from '../../firebase/firebase.utils'\nimport ShopActionTypes from './shop.types';\n\nfunction* fetchCollectionsAsync(){\n    yield console.log('here')\n    const collectionRef = firestore.collection('collections');\n \n\n    collectionRef.get().then(snapshot => {  \n        const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n        dispatch(fetchCollecitonsSuccess(collectionMap)); \n    }).catch(err => dispatch(fetchCollectionsFailure(err)));\n}\n\nexport function* fetchCollectionsStart(){\n    yield takeEvery(\n        ShopActionTypes.FETCH_COLLECTION_START, \n        fetchCollectionsAsync\n    );\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"/Users/vladyslavzuiev/Desktop/Udemy/crwn-clothing/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport const addItemToCart = (cartItems, cartItemToAdd) => {\n  console.log(\"testing dasdasdas\", cartItemToAdd);\n  const existingCatItem = cartItems.find(cartItem => cartItem.Id === cartItemToAdd.Id);\n\n  if (existingCatItem) {\n    let items = cartItems.map(item => item.id === cartItemToAdd.id ? _objectSpread({}, item, {\n      quantity: item.quantity + 1\n    }) : item);\n    return items;\n  }\n\n  console.log(\"Wawdawdawa\", [...cartItems, _objectSpread({}, cartItemToAdd, {\n    quantity: 1\n  })]);\n  return [...cartItems, _objectSpread({}, cartItemToAdd, {\n    quantity: 1\n  })];\n};","map":{"version":3,"sources":["/Users/vladyslavzuiev/Desktop/Udemy/crwn-clothing/src/redux/cart/cart.utils.js"],"names":["addItemToCart","cartItems","cartItemToAdd","console","log","existingCatItem","find","cartItem","Id","items","map","item","id","quantity"],"mappings":";;;;;;AAAA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,aAAZ,KAA8B;AACvDC,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,aAAjC;AACA,QAAMG,eAAe,GAAGJ,SAAS,CAACK,IAAV,CAAeC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBN,aAAa,CAACM,EAAzD,CAAxB;;AAEA,MAAGH,eAAH,EAAmB;AACf,QAAII,KAAK,GAAGR,SAAS,CAACS,GAAV,CAAcC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYV,aAAa,CAACU,EAA1B,qBACxBD,IADwB;AAClBE,MAAAA,QAAQ,EAAEF,IAAI,CAACE,QAAL,GAAgB;AADR,SAE5BF,IAFM,CAAZ;AAGA,WAAOF,KAAP;AACH;;AAEDN,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B,CAAC,GAAGH,SAAJ,oBAAmBC,aAAnB;AAAkCW,IAAAA,QAAQ,EAAE;AAA5C,KAA1B;AAEA,SAAO,CAAC,GAAGZ,SAAJ,oBAAmBC,aAAnB;AAAkCW,IAAAA,QAAQ,EAAE;AAA5C,KAAP;AACH,CAdM","sourcesContent":["export const addItemToCart = (cartItems, cartItemToAdd) => {\n    console.log(\"testing dasdasdas\", cartItemToAdd);\n    const existingCatItem = cartItems.find(cartItem => cartItem.Id === cartItemToAdd.Id);\n\n    if(existingCatItem){\n        let items = cartItems.map(item => item.id === cartItemToAdd.id \n            ? {...item, quantity: item.quantity + 1} \n            : item);\n        return items;\n    }\n\n    console.log(\"Wawdawdawa\", [...cartItems, {...cartItemToAdd, quantity: 1}])\n\n    return [...cartItems, {...cartItemToAdd, quantity: 1}]\n} "]},"metadata":{},"sourceType":"module"}
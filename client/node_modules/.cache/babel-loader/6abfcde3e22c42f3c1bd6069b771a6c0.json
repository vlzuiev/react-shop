{"ast":null,"code":"import _defineProperty from \"/Users/vladyslavzuiev/Desktop/Udemy/crwn-clothing/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport const addItemToCart = (cartItems, cartItemToAdd) => {\n  const existingCatItem = cartItems.find(cartItem => cartItem.id === cartItemToAdd.id);\n\n  if (existingCatItem) {\n    let items = cartItems.map(item => item.id === cartItemToAdd.id ? _objectSpread({}, item, {\n      quantity: item.quantity + 1\n    }) : item);\n    return items;\n  }\n\n  return [...cartItems, _objectSpread({}, cartItemToAdd, {\n    quantity: 1\n  })];\n};\nexport const deleteOneItemFromCart = (cartItems, cartItemToDelete) => {\n  const existingCatItem = cartItems.find(cartItem => cartItem.id === cartItemToDelete.id);\n\n  if (existingCatItem.quantity === 1) {\n    return cartItems.filter(item => item.id !== cartItemToDelete.id);\n  }\n\n  return cartItems.map(item => item.id === cartItemToDelete.id ? _objectSpread({}, cartItems, {\n    quantity: item.quantity - 1\n  }) : item);\n};\nexport const deleteItemFromCart = (cartItems, cartItemToDelete) => {\n  return cartItems.filter(item => item.id !== cartItemToDelete.id);\n};","map":{"version":3,"sources":["/Users/vladyslavzuiev/Desktop/Udemy/crwn-clothing/src/redux/cart/cart.utils.js"],"names":["addItemToCart","cartItems","cartItemToAdd","existingCatItem","find","cartItem","id","items","map","item","quantity","deleteOneItemFromCart","cartItemToDelete","filter","deleteItemFromCart"],"mappings":";;;;;;AAAA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,aAAZ,KAA8B;AACvD,QAAMC,eAAe,GAAGF,SAAS,CAACG,IAAV,CAAeC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EAAzD,CAAxB;;AAEA,MAAIH,eAAJ,EAAqB;AACjB,QAAII,KAAK,GAAGN,SAAS,CAACO,GAAV,CAAcC,IAAI,IAAIA,IAAI,CAACH,EAAL,KAAYJ,aAAa,CAACI,EAA1B,qBAEvBG,IAFuB;AAG1BC,MAAAA,QAAQ,EAAED,IAAI,CAACC,QAAL,GAAgB;AAHA,SAK9BD,IALQ,CAAZ;AAMA,WAAOF,KAAP;AACH;;AACD,SAAO,CAAC,GAAGN,SAAJ,oBACAC,aADA;AAEHQ,IAAAA,QAAQ,EAAE;AAFP,KAAP;AAIH,CAhBM;AAmBP,OAAO,MAAMC,qBAAqB,GAAG,CAACV,SAAD,EAAYW,gBAAZ,KAAiC;AAClE,QAAMT,eAAe,GAAGF,SAAS,CAACG,IAAV,CAAeC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBM,gBAAgB,CAACN,EAA5D,CAAxB;;AAEA,MAAGH,eAAe,CAACO,QAAhB,KAA6B,CAAhC,EAAkC;AAC9B,WAAOT,SAAS,CAACY,MAAV,CAAiBJ,IAAI,IAAIA,IAAI,CAACH,EAAL,KAAYM,gBAAgB,CAACN,EAAtD,CAAP;AACH;;AAED,SAAOL,SAAS,CAACO,GAAV,CAAcC,IAAI,IAAIA,IAAI,CAACH,EAAL,KAAYM,gBAAgB,CAACN,EAA7B,qBAAsCL,SAAtC;AAAiDS,IAAAA,QAAQ,EAAED,IAAI,CAACC,QAAL,GAAgB;AAA3E,OAAgFD,IAAtG,CAAP;AACH,CARM;AAUP,OAAO,MAAMK,kBAAkB,GAAG,CAACb,SAAD,EAAYW,gBAAZ,KAAiC;AAC/D,SAAOX,SAAS,CAACY,MAAV,CAAiBJ,IAAI,IAAIA,IAAI,CAACH,EAAL,KAAYM,gBAAgB,CAACN,EAAtD,CAAP;AACH,CAFM","sourcesContent":["export const addItemToCart = (cartItems, cartItemToAdd) => {\n    const existingCatItem = cartItems.find(cartItem => cartItem.id === cartItemToAdd.id);\n\n    if (existingCatItem) {\n        let items = cartItems.map(item => item.id === cartItemToAdd.id ?\n            {\n                ...item,\n                quantity: item.quantity + 1\n            } :\n            item);\n        return items;\n    }\n    return [...cartItems, {\n        ...cartItemToAdd,\n        quantity: 1\n    }]\n}\n\n\nexport const deleteOneItemFromCart = (cartItems, cartItemToDelete) => {\n    const existingCatItem = cartItems.find(cartItem => cartItem.id === cartItemToDelete.id);\n\n    if(existingCatItem.quantity === 1){\n        return cartItems.filter(item => item.id !== cartItemToDelete.id);\n    }\n\n    return cartItems.map(item => item.id === cartItemToDelete.id ? {...cartItems, quantity: item.quantity - 1} : item)\n}\n\nexport const deleteItemFromCart = (cartItems, cartItemToDelete) => {\n    return cartItems.filter(item => item.id !== cartItemToDelete.id);\n}"]},"metadata":{},"sourceType":"module"}
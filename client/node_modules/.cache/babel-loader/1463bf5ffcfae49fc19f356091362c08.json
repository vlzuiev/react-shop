{"ast":null,"code":"var _jsxFileName = \"/Users/vladyslavzuiev/Desktop/Udemy/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport CollectionsOverView from '../../components/collections-overview/collecitons-overview.component';\nimport { Route } from 'react-router-dom';\nimport CategoryPage from '../collection/collection.component';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { fetchCollectionStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionFetching, selectIsCollectionLoaded } from '../../redux/shop/shop.selectors';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverView);\nconst CollectionPageWithSpinner = WithSpinner(CategoryPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const fetchCollectionStartAsync = this.props.fetchCollectionStartAsync;\n    fetchCollectionStartAsync();\n  }\n\n  render() {\n    const _this$props = this.props,\n          match = _this$props.match,\n          isCollectionFetching = _this$props.isCollectionFetching,\n          selectIsCollectionLoaded = _this$props.selectIsCollectionLoaded;\n    console.log('selectIsCollectionLoaded', selectIsCollectionLoaded);\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      render: props => React.createElement(CollectionOverviewWithSpinner, Object.assign({\n        isLoading: isCollectionFetching\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: !selectIsCollectionLoaded\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionStartAsync: () => dispatch(fetchCollectionStartAsync())\n});\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching,\n  isCollectionLoaded: selectIsCollectionLoaded\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/vladyslavzuiev/Desktop/Udemy/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","CollectionsOverView","Route","CategoryPage","connect","createStructuredSelector","fetchCollectionStartAsync","selectIsCollectionFetching","selectIsCollectionLoaded","WithSpinner","CollectionOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","isCollectionFetching","console","log","path","mapDispatchToProps","dispatch","mapStateToProps","isCollectionLoaded"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,YAAP,MAAyB,oCAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,yBAAT,QAA0C,+BAA1C;AACA,SAASC,0BAAT,EAAqCC,wBAArC,QAAqE,iCAArE;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,MAAMC,6BAA6B,GAAGD,WAAW,CAACR,mBAAD,CAAjD;AACA,MAAMU,yBAAyB,GAAGF,WAAW,CAACN,YAAD,CAA7C;;AAGA,MAAMS,QAAN,SAAuBZ,KAAK,CAACa,SAA7B,CAAuC;AAEnCC,EAAAA,iBAAiB,GAAG;AAAA,UACRR,yBADQ,GACsB,KAAKS,KAD3B,CACRT,yBADQ;AAEhBA,IAAAA,yBAAyB;AAC5B;;AAEDU,EAAAA,MAAM,GAAG;AAAA,wBAC6D,KAAKD,KADlE;AAAA,UACGE,KADH,eACGA,KADH;AAAA,UACUC,oBADV,eACUA,oBADV;AAAA,UACgCV,wBADhC,eACgCA,wBADhC;AAELW,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCZ,wBAAxC;AACA,WAAQ;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACJ,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,YAAKS,KAAK,CAACI,IAAX,CAAjB;AAAoC,MAAA,MAAM,EAAGN,KAAD,IAAW,oBAAC,6BAAD;AAA+B,QAAA,SAAS,EAAEG;AAA1C,SAAoEH,KAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADI,EAEJ,oBAAC,KAAD;AAAO,MAAA,IAAI,YAAKE,KAAK,CAACI,IAAX,mBAAX;AAA4C,MAAA,MAAM,EAAGN,KAAD,IAAW,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAE,CAACP;AAAvC,SAAqEO,KAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFI,CAAR;AAKH;;AAfkC;;AAkBvC,MAAMO,kBAAkB,GAAGC,QAAQ,KAAK;AACpCjB,EAAAA,yBAAyB,EAAE,MAAMiB,QAAQ,CAACjB,yBAAyB,EAA1B;AADL,CAAL,CAAnC;;AAIA,MAAMkB,eAAe,GAAGnB,wBAAwB,CAAC;AAC7Ca,EAAAA,oBAAoB,EAAEX,0BADuB;AAE7CkB,EAAAA,kBAAkB,EAAEjB;AAFyB,CAAD,CAAhD;AAKA,eAAeJ,OAAO,CAACoB,eAAD,EAAkBF,kBAAlB,CAAP,CAA6CV,QAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport CollectionsOverView from '../../components/collections-overview/collecitons-overview.component';\r\nimport { Route } from 'react-router-dom';\r\nimport CategoryPage from '../collection/collection.component'\r\nimport { connect } from 'react-redux'\r\nimport { createStructuredSelector } from 'reselect';\r\nimport { fetchCollectionStartAsync } from '../../redux/shop/shop.actions';  \r\nimport { selectIsCollectionFetching, selectIsCollectionLoaded } from '../../redux/shop/shop.selectors';\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\r\n\r\nconst CollectionOverviewWithSpinner = WithSpinner(CollectionsOverView);\r\nconst CollectionPageWithSpinner = WithSpinner(CategoryPage);\r\n\r\n\r\nclass ShopPage extends React.Component {   \r\n    \r\n    componentDidMount() { \r\n        const { fetchCollectionStartAsync } = this.props; \r\n        fetchCollectionStartAsync();\r\n    }\r\n\r\n    render() {\r\n        const { match, isCollectionFetching, selectIsCollectionLoaded } = this.props; \r\n        console.log('selectIsCollectionLoaded', selectIsCollectionLoaded)\r\n        return (<div className='shop-page'>\r\n            <Route exact path={`${match.path}`} render={(props) => <CollectionOverviewWithSpinner isLoading={isCollectionFetching} {...props} />} />\r\n            <Route path={`${match.path}/:collectionId`} render={(props) => <CollectionPageWithSpinner isLoading={!selectIsCollectionLoaded} {...props} />} />\r\n        </div>\r\n        );\r\n    } \r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({ \r\n    fetchCollectionStartAsync: () => dispatch(fetchCollectionStartAsync())\r\n});\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    isCollectionFetching: selectIsCollectionFetching,\r\n    isCollectionLoaded: selectIsCollectionLoaded\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}
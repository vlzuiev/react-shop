{"ast":null,"code":"import _objectSpread from \"/Users/vladyslavzuiev/Desktop/Udemy/crwn-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserTypes from './user.types';\nimport { googleProvider, auth, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { SignInSuccess, SignInFailure } from './user.action';\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(SignInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (err) {\n    yield put(SignInFailure(err));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (err) {\n    yield put(SignInFailure(err));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const _ref2 = yield auth.signInWithEmailAndPassword(email, password),\n          user = _ref2.user;\n\n    yield getSnapshotFromUserAuth(user);\n  } catch (err) {\n    yield put(SignInFailure(err));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["/Users/vladyslavzuiev/Desktop/Udemy/crwn-clothing/src/redux/user/user.saga.js"],"names":["takeLatest","put","all","call","UserTypes","googleProvider","auth","createUserProfileDocument","SignInSuccess","SignInFailure","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","err","signInWithGoogle","signInWithPopup","user","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAASC,cAAT,EAAyBC,IAAzB,EAA+BC,yBAA/B,QAAgE,+BAAhE;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,eAA7C;AAGA,OAAO,UAAUC,uBAAV,CAAkCC,QAAlC,EAA2C;AAC9C,MAAI;AACA,UAAMC,OAAO,GAAG,MAAMT,IAAI,CAACI,yBAAD,EAA4BI,QAA5B,CAA1B;AAEA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMb,GAAG,CAACO,aAAa;AAAGO,MAAAA,EAAE,EAAEF,YAAY,CAACE;AAApB,OAA2BF,YAAY,CAACG,IAAb,EAA3B,EAAd,CAAT;AACH,GALD,CAKE,OAAOC,GAAP,EAAY;AACV,UAAMhB,GAAG,CAACQ,aAAa,CAACQ,GAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,gBAAV,GAA6B;AAChC,MAAI;AAAA,iBACe,MAAMZ,IAAI,CAACa,eAAL,CAAqBd,cAArB,CADrB;AAAA,UACOe,IADP,QACOA,IADP;;AAEA,UAAMV,uBAAuB,CAACU,IAAD,CAA7B;AACH,GAHD,CAGE,OAAOH,GAAP,EAAY;AACV,UAAMhB,GAAG,CAACQ,aAAa,CAACQ,GAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUI,eAAV,CAA0B;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT;AAAX,CAA1B,EAA0D;AAC7D,MAAG;AAAA,kBACkB,MAAMlB,IAAI,CAACmB,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CADxB;AAAA,UACSJ,IADT,SACSA,IADT;;AAEC,UAAMV,uBAAuB,CAACU,IAAD,CAA7B;AACH,GAHD,CAGC,OAAMH,GAAN,EAAU;AACP,UAAMhB,GAAG,CAACQ,aAAa,CAACQ,GAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUS,mBAAV,GAAgC;AACnC,QAAM1B,UAAU,CACZI,SAAS,CAACuB,oBADE,EAEZT,gBAFY,CAAhB;AAIH;AAED,OAAO,UAAUU,kBAAV,GAA8B;AACjC,QAAM5B,UAAU,CACZI,SAAS,CAACyB,mBADE,EAEZR,eAFY,CAAhB;AAIH;AAED,OAAO,UAAUS,SAAV,GAAsB;AACzB,QAAM5B,GAAG,CAAC,CAACC,IAAI,CAACuB,mBAAD,CAAL,EAA4BvB,IAAI,CAACyB,kBAAD,CAAhC,CAAD,CAAT;AACH","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserTypes from './user.types';\nimport { googleProvider, auth, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { SignInSuccess, SignInFailure } from './user.action';\n\n\nexport function* getSnapshotFromUserAuth(userAuth){\n    try { \n        const userRef = yield call(createUserProfileDocument, userAuth);\n\n        const userSnapshot = yield userRef.get();\n        yield put(SignInSuccess({ id: userSnapshot.id, ...userSnapshot.data()}));\n    } catch (err) {\n        yield put(SignInFailure(err))\n    }\n}\n\nexport function* signInWithGoogle() {\n    try {\n        const {user} = yield auth.signInWithPopup(googleProvider);\n        yield getSnapshotFromUserAuth(user);\n    } catch (err) {\n        yield put(SignInFailure(err))\n    }\n}\n\nexport function* signInWithEmail({ payload: { email, password }}){\n    try{\n        const { user } = yield auth.signInWithEmailAndPassword(email, password);\n        yield getSnapshotFromUserAuth(user);\n    }catch(err){\n        yield put(SignInFailure(err))\n    }\n}\n\nexport function* onGoogleSignInStart() {\n    yield takeLatest(\n        UserTypes.GOOGLE_SIGN_IN_START,\n        signInWithGoogle\n    );\n}\n\nexport function* onEmailSignInStart(){\n    yield takeLatest(\n        UserTypes.EMAIL_SIGN_IN_START,\n        signInWithEmail\n    );\n}\n\nexport function* userSagas() {\n    yield all([call(onGoogleSignInStart), call(onEmailSignInStart)])\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserTypes from './user.types';\nimport { googleProvider, auth, createUserProfileDocument } from '../../firebase/firebase.utils';\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n  } catch (err) {\n    yield put(UserTypes.GOOGLE_SIGN_IN_FAILURE, err);\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* userSagas() {\n  yield all([onGoogleSignInStart()]);\n}","map":{"version":3,"sources":["/Users/vladyslavzuiev/Desktop/Udemy/crwn-clothing/src/redux/user/user.saga.js"],"names":["takeLatest","put","all","call","UserTypes","googleProvider","auth","createUserProfileDocument","signInWithGoogle","signInWithPopup","user","userRef","userSnapshot","get","err","GOOGLE_SIGN_IN_FAILURE","onGoogleSignInStart","GOOGLE_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAASC,cAAT,EAAyBC,IAAzB,EAA+BC,yBAA/B,QAAgE,+BAAhE;AAEA,OAAO,UAAUC,gBAAV,GAA6B;AAChC,MAAI;AAAA,iBACe,MAAMF,IAAI,CAACG,eAAL,CAAqBJ,cAArB,CADrB;AAAA,UACOK,IADP,QACOA,IADP;;AAEA,UAAMC,OAAO,GAAG,MAAMR,IAAI,CAACI,yBAAD,EAA4BG,IAA5B,CAA1B;AAEA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AAEH,GAND,CAME,OAAOC,GAAP,EAAY;AACV,UAAMb,GAAG,CAACG,SAAS,CAACW,sBAAX,EAAmCD,GAAnC,CAAT;AACH;AACJ;AAED,OAAO,UAAUE,mBAAV,GAAgC;AACnC,QAAMhB,UAAU,CACZI,SAAS,CAACa,oBADE,EAEZT,gBAFY,CAAhB;AAIH;AAED,OAAO,UAAUU,SAAV,GAAsB;AACzB,QAAMhB,GAAG,CAAC,CAACc,mBAAmB,EAApB,CAAD,CAAT;AACH","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserTypes from './user.types';\nimport { googleProvider, auth, createUserProfileDocument } from '../../firebase/firebase.utils';\n\nexport function* signInWithGoogle() {\n    try {\n        const {user} = yield auth.signInWithPopup(googleProvider);\n        const userRef = yield call(createUserProfileDocument, user);\n\n        const userSnapshot = yield userRef.get();\n\n    } catch (err) {\n        yield put(UserTypes.GOOGLE_SIGN_IN_FAILURE, err)\n    }\n}\n\nexport function* onGoogleSignInStart() {\n    yield takeLatest(\n        UserTypes.GOOGLE_SIGN_IN_START,\n        signInWithGoogle\n    )\n}\n\nexport function* userSagas() {\n    yield all([onGoogleSignInStart()])\n}\n"]},"metadata":{},"sourceType":"module"}
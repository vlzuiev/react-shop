{"ast":null,"code":"var _jsxFileName = \"/Users/vladyslavzuiev/Desktop/Udemy/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport CollectionsOverView from '../../components/collections-overview/collecitons-overview.component';\nimport { Route } from 'react-router-dom';\nimport CategoryPage from '../collection/collection.component';\nimport { connect } from 'react-redux';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.usubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const updateCollections = this.props.updateCollections;\n    const collectionRef = firestore.collection('collections');\n    this.usubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionMap);\n    });\n  }\n\n  render() {\n    const match = this.props.match;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"\".concat(match.path),\n      component: CollectionsOverView,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"\".concat(match.path, \"/:collectionId\"),\n      component: CategoryPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/vladyslavzuiev/Desktop/Udemy/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","CollectionsOverView","Route","CategoryPage","connect","updateCollections","firestore","convertCollectionsSnapshotToMap","WithSpinner","ShopPage","Component","usubscribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionMap","render","match","path","mapDispatchToProps","dispatch","collectionsMap"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,OAAOC,YAAP,MAAyB,oCAAzB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,iBAAT,QAAkC,+BAAlC;AAEA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;;AAGA,MAAMC,QAAN,SAAuBT,KAAK,CAACU,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACnCC,sBADmC,GACV,IADU;AAAA;;AAGnCC,EAAAA,iBAAiB,GAAE;AAAA,UACPP,iBADO,GACe,KAAKQ,KADpB,CACPR,iBADO;AAEf,UAAMS,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AAEA,SAAKJ,sBAAL,GAA8BG,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACrE,YAAMC,aAAa,GAAGX,+BAA+B,CAACU,QAAD,CAArD;AACAZ,MAAAA,iBAAiB,CAACa,aAAD,CAAjB;AACH,KAH6B,CAA9B;AAIH;;AAEDC,EAAAA,MAAM,GAAG;AAAA,UACGC,KADH,GACa,KAAKP,KADlB,CACGO,KADH;AAGL,WAAQ;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACJ,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,YAAKA,KAAK,CAACC,IAAX,CAAjB;AAAoC,MAAA,SAAS,EAAEpB,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADI,EAEJ,oBAAC,KAAD;AAAO,MAAA,IAAI,YAAKmB,KAAK,CAACC,IAAX,mBAAX;AAA4C,MAAA,SAAS,EAAElB,YAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFI,CAAR;AAKH;;AArBkC;;AAyBvC,MAAMmB,kBAAkB,GAAGC,QAAQ,KAAK;AACpClB,EAAAA,iBAAiB,EAAEmB,cAAc,IAAID,QAAQ,CAAClB,iBAAiB,CAACmB,cAAD,CAAlB;AADT,CAAL,CAAnC;;AAIA,eAAepB,OAAO,CAAC,IAAD,EAAOkB,kBAAP,CAAP,CAAkCb,QAAlC,CAAf","sourcesContent":["import React from 'react';\r\nimport CollectionsOverView from '../../components/collections-overview/collecitons-overview.component';\r\nimport { Route } from 'react-router-dom';\r\nimport CategoryPage from '../collection/collection.component'\r\nimport {connect} from 'react-redux'\r\nimport { updateCollections } from '../../redux/shop/shop.actions';\r\n \r\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'\r\n\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\r\n\r\n\r\nclass ShopPage extends React.Component {\r\n    usubscribeFromSnapshot = null;\r\n\r\n    componentDidMount(){\r\n        const { updateCollections } = this.props;\r\n        const collectionRef = firestore.collection('collections');\r\n\r\n        this.usubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\r\n            const collectionMap = convertCollectionsSnapshotToMap(snapshot);\r\n            updateCollections(collectionMap)\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { match } = this.props;\r\n\r\n        return (<div className='shop-page'>\r\n            <Route exact path={`${match.path}`} component={CollectionsOverView} />\r\n            <Route path={`${match.path}/:collectionId`} component={CategoryPage} />\r\n        </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}
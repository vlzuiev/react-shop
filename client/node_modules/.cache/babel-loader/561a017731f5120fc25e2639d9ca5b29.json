{"ast":null,"code":"import _defineProperty from \"/Users/vladyslavzuiev/Desktop/Udemy/crwn-clothing/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nexport const addItemToCart = (cartItems, cartItemToAdd) => {\n  const existingCatItem = cartItems.find(cartItem => cartItem.Id === cartItemToAdd.Id);\n\n  if (existingCatItem) {\n    let item = cartItems.map(cartItem => cartItem.id === cartItemToAdd.id ? _objectSpread({}, cartItems, {\n      quantity: cartItem.quantity + 1\n    }) : cartItem);\n    console.log(item);\n    return item;\n  }\n\n  return [...cartItems, _objectSpread({}, cartItemToAdd, {\n    quantity: 1\n  })];\n};","map":{"version":3,"sources":["/Users/vladyslavzuiev/Desktop/Udemy/crwn-clothing/src/redux/cart/cart.utils.js"],"names":["addItemToCart","cartItems","cartItemToAdd","existingCatItem","find","cartItem","Id","item","map","id","quantity","console","log"],"mappings":";;;;;;AAAA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,aAAZ,KAA8B;AACvD,QAAMC,eAAe,GAAGF,SAAS,CAACG,IAAV,CAAeC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EAAzD,CAAxB;;AAEA,MAAGH,eAAH,EAAmB;AACf,QAAII,IAAI,GAAGN,SAAS,CAACO,GAAV,CAAcH,QAAQ,IAAIA,QAAQ,CAACI,EAAT,KAAgBP,aAAa,CAACO,EAA9B,qBAC3BR,SAD2B;AAChBS,MAAAA,QAAQ,EAAEL,QAAQ,CAACK,QAAT,GAAoB;AADd,SAE/BL,QAFK,CAAX;AAGAM,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACA,WAAOA,IAAP;AACH;;AAED,SAAO,CAAC,GAAGN,SAAJ,oBAAmBC,aAAnB;AAAkCQ,IAAAA,QAAQ,EAAE;AAA5C,KAAP;AACH,CAZM","sourcesContent":["export const addItemToCart = (cartItems, cartItemToAdd) => {\n    const existingCatItem = cartItems.find(cartItem => cartItem.Id === cartItemToAdd.Id);\n\n    if(existingCatItem){\n        let item = cartItems.map(cartItem => cartItem.id === cartItemToAdd.id \n            ? {...cartItems, quantity: cartItem.quantity + 1} \n            : cartItem)\n        console.log(item)\n        return item;\n    }\n\n    return [...cartItems, {...cartItemToAdd, quantity: 1}]\n} "]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/vladyslavzuiev/Desktop/Udemy/crwn-clothing/src/components/sign-up/sign-up.component.jsx\";\nimport React from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/cutom-button.component';\nimport './sign-up.styles.scss';\nimport { connect } from 'react-redux';\nimport { signUpStart } from '../../redux/user/user.action'; // import { auth, createUserProfileDocument } from '../../firebase/firebase.utils';\n\nclass SignUp extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault(); // const { displayName, email, password, confirmPassword} = this.state;\n      // if(password !== confirmPassword){\n      //     alert('passwords don\\'t match');\n      //     return;\n      // }\n      // \n    };\n\n    this.handleChange = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      displayName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"sign-up\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"I do not have an account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Sign up with your email and password\"), React.createElement(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      type: \"text\",\n      name: \"displayName\",\n      value: this.state.displayName,\n      onChange: this.handleChange,\n      label: \"Display Name\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"email\",\n      name: \"email\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      label: \"Email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      label: \"Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      type: \"password\",\n      name: \"confirmPassword\",\n      value: this.state.confirmPassword,\n      onChange: this.handleChange,\n      label: \"Confirm Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"SIGN UP\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: () => dispatch(signUpStart())\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/vladyslavzuiev/Desktop/Udemy/crwn-clothing/src/components/sign-up/sign-up.component.jsx"],"names":["React","FormInput","CustomButton","connect","signUpStart","SignUp","Component","constructor","props","handleSubmit","event","preventDefault","handleChange","target","name","value","setState","state","displayName","email","password","confirmPassword","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/cutom-button.component';\nimport './sign-up.styles.scss';\n\nimport { connect } from 'react-redux';\nimport { signUpStart } from '../../redux/user/user.action';\n\n// import { auth, createUserProfileDocument } from '../../firebase/firebase.utils';\n\nclass SignUp extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            displayName: '',\n            email: '',\n            password: '',\n            confirmPassword: ''\n        }\n    }\n\n    handleSubmit = async event => {\n        event.preventDefault();\n\n        // const { displayName, email, password, confirmPassword} = this.state;\n\n        // if(password !== confirmPassword){\n        //     alert('passwords don\\'t match');\n        //     return;\n        // }\n        // \n    }\n\n    handleChange = (event) => {\n        const {name, value} = event.target;\n        this.setState({[name]: value})\n    }\n\n    render() {\n        return (<div className='sign-up'>\n            <h2 className='title'>I do not have an account</h2>\n            <span>Sign up with your email and password</span>\n            <form className='sign-up-form' onSubmit={this.handleSubmit}>\n                <FormInput type='text' name='displayName' value={this.state.displayName} onChange={this.handleChange} label='Display Name' required/>\n                <FormInput type='email' name='email' value={this.state.email} onChange={this.handleChange} label='Email' required/>\n                <FormInput type='password' name='password' value={this.state.password} onChange={this.handleChange} label='Password' required/>\n                <FormInput type='password' name='confirmPassword' value={this.state.confirmPassword} onChange={this.handleChange} label='Confirm Password' required/>\n                <CustomButton type='submit'>SIGN UP</CustomButton>\n            </form>\n        </div>)\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    signUpStart: () => dispatch(signUpStart())\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTION_START,\n  payload: collectionsMap\n});\nexport const fetchCollectionStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    collectionRef.get().then(snapshot => {\n      const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionMap);\n      this.setState({\n        loading: false\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/vladyslavzuiev/Desktop/Udemy/crwn-clothing/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionStart","type","FETCH_COLLECTION_START","payload","collectionsMap","fetchCollectionStartAsync","dispatch","collectionRef","collection","get","then","snapshot","collectionMap","updateCollections","setState","loading"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,OAAO,MAAMC,oBAAoB,GAAG,OAAO;AACvCC,EAAAA,IAAI,EAAEJ,eAAe,CAACK,sBADiB;AAEvCC,EAAAA,OAAO,EAAEC;AAF8B,CAAP,CAA7B;AAKP,OAAO,MAAMC,yBAAyB,GAAG,MAAM;AAC3C,SAAOC,QAAQ,IAAI;AACf,UAAMC,aAAa,GAAGT,SAAS,CAACU,UAAV,CAAqB,aAArB,CAAtB;AAEAD,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyBC,QAAQ,IAAI;AACjC,YAAMC,aAAa,GAAGb,+BAA+B,CAACY,QAAD,CAArD;AACAE,MAAAA,iBAAiB,CAACD,aAAD,CAAjB;AACA,WAAKE,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;AACH,KAJD;AAKH,GARD;AASH,CAVM","sourcesContent":["import ShopActionTypes from './shop.types'\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils'\nexport const fetchCollectionStart = () => ({\n    type: ShopActionTypes.FETCH_COLLECTION_START,\n    payload: collectionsMap\n});\n\nexport const fetchCollectionStartAsync = () => {\n    return dispatch => {\n        const collectionRef = firestore.collection('collections');\n\n        collectionRef.get().then(snapshot => {\n            const collectionMap = convertCollectionsSnapshotToMap(snapshot);\n            updateCollections(collectionMap);\n            this.setState({ loading: false });\n        });\n    }\n}"]},"metadata":{},"sourceType":"module"}
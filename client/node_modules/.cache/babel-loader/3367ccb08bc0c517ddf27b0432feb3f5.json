{"ast":null,"code":"import _objectSpread from \"/Users/vladyslavzuiev/Desktop/Udemy/crwn-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/vladyslavzuiev/Desktop/Udemy/crwn-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/vladyslavzuiev/Desktop/Udemy/crwn-clothing/src/components/sign-in/sign-in.component.jsx\";\nimport React, { useState } from 'react';\nimport './sign-in.styles.scss';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/cutom-button.component';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.action';\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  const _useState = useState({\n    email: '',\n    password: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCredentials = _useState2[0],\n        setCredetials = _useState2[1];\n\n  const email = userCredentials.email,\n        password = userCredentials.password;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          value = _event$target.value,\n          name = _event$target.name;\n    setCredetials(_objectSpread({}, userCredentials, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-in\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"I already have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    handleChange: handleChange,\n    value: email,\n    label: \"Email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    handleChange: handleChange,\n    value: password,\n    label: \"Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Sign in\"), React.createElement(CustomButton, {\n    onClick: googleSignInStart,\n    isGoogleSignIn: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Sign in with Google\"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/vladyslavzuiev/Desktop/Udemy/crwn-clothing/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignIn","email","password","userCredentials","setCredetials","handleSubmit","event","preventDefault","handleChange","target","value","name","mapDispatchToProps","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,uBAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,yCAAzB;AAEA,SAASC,iBAAT,EAA4BC,gBAA5B,QAAoD,8BAApD;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAACD,EAAAA,gBAAD;AAAoBD,EAAAA;AAApB,CAAD,KAA4C;AAAA,oBACdJ,QAAQ,CAAC;AAAEO,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,QAAQ,EAAE;AAAvB,GAAD,CADM;AAAA;AAAA,QAChDC,eADgD;AAAA,QAC/BC,aAD+B;;AAAA,QAE/CH,KAF+C,GAE3BE,eAF2B,CAE/CF,KAF+C;AAAA,QAExCC,QAFwC,GAE3BC,eAF2B,CAExCD,QAFwC;;AAIvD,QAAMG,YAAY,GAAG,MAAMC,KAAN,IAAe;AAChCA,IAAAA,KAAK,CAACC,cAAN;AACAR,IAAAA,gBAAgB,CAACE,KAAD,EAAQC,QAAR,CAAhB;AACH,GAHD;;AAKA,QAAMM,YAAY,GAAGF,KAAK,IAAI;AAAA,0BACFA,KAAK,CAACG,MADJ;AAAA,UAClBC,KADkB,iBAClBA,KADkB;AAAA,UACXC,IADW,iBACXA,IADW;AAE1BP,IAAAA,aAAa,mBAAKD,eAAL;AAAsB,OAACQ,IAAD,GAAQD;AAA9B,OAAb;AACH,GAHD;;AAKA,SAAO;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADG,EAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAFG,EAGH;AAAM,IAAA,QAAQ,EAAEL,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,OAAhB;AAAwB,IAAA,IAAI,EAAC,OAA7B;AAAqC,IAAA,YAAY,EAAEG,YAAnD;AAAiE,IAAA,KAAK,EAAEP,KAAxE;AAA+E,IAAA,KAAK,EAAC,OAArF;AAA6F,IAAA,QAAQ,MAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAGI,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAC,UAAhB;AAA2B,IAAA,IAAI,EAAC,UAAhC;AAA2C,IAAA,YAAY,EAAEO,YAAzD;AAAuE,IAAA,KAAK,EAAEN,QAA9E;AAAwF,IAAA,KAAK,EAAC,UAA9F;AAAyG,IAAA,QAAQ,MAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEJ,iBAAvB;AAA0C,IAAA,cAAc,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFJ,CAJJ,CAHG,CAAP;AAcH,CA5BD;;AA6BA,MAAMc,kBAAkB,GAAGC,QAAQ,KAAK;AACpCf,EAAAA,iBAAiB,EAAE,MAAMe,QAAQ,CAACf,iBAAiB,EAAlB,CADG;AAEpCC,EAAAA,gBAAgB,EAAE,CAACE,KAAD,EAAQC,QAAR,KAAqBW,QAAQ,CAACd,gBAAgB,CAAC;AAAEE,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,CAAjB;AAFX,CAAL,CAAnC;;AAIA,eAAeP,OAAO,CAAC,IAAD,EAAOiB,kBAAP,CAAP,CAAkCZ,MAAlC,CAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport './sign-in.styles.scss';\r\nimport { connect } from 'react-redux'\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/cutom-button.component';\r\n\r\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.action'\r\n\r\nconst SignIn = ({emailSignInStart , googleSignInStart}) => { \r\n    const [userCredentials, setCredetials] = useState({ email: '', password: ''}); \r\n    const { email, password } = userCredentials; \r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault(); \r\n        emailSignInStart(email, password);\r\n    }\r\n\r\n    const handleChange = event => {\r\n        const { value, name } = event.target; \r\n        setCredetials({...userCredentials, [name]: value });\r\n    }  \r\n\r\n    return <div className='sign-in'>\r\n        <h2>I already have an account</h2>\r\n        <span>Sign in with your email and password</span>\r\n        <form onSubmit={handleSubmit}>\r\n            <FormInput name='email' type='email' handleChange={handleChange} value={email} label='Email' required />\r\n\r\n            <FormInput name='password' type='password' handleChange={handleChange} value={password} label='Password' required />\r\n            <div className='buttons'>\r\n                <CustomButton type='submit'>Sign in</CustomButton>\r\n                <CustomButton onClick={googleSignInStart} isGoogleSignIn >Sign in with Google</CustomButton>\r\n            </div>\r\n        </form>\r\n    </div>\r\n\r\n}\r\nconst mapDispatchToProps = dispatch => ({\r\n    googleSignInStart: () => dispatch(googleSignInStart()),\r\n    emailSignInStart: (email, password) => dispatch(emailSignInStart({ email, password }))\r\n});\r\nexport default connect(null, mapDispatchToProps)(SignIn);"]},"metadata":{},"sourceType":"module"}
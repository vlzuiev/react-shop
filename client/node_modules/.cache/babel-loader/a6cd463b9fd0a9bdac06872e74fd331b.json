{"ast":null,"code":"import _objectSpread from \"/Users/vladyslavzuiev/Desktop/Udemy/crwn-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/vladyslavzuiev/Desktop/Udemy/crwn-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/vladyslavzuiev/Desktop/Udemy/crwn-clothing/src/components/sign-up/sign-up.component.jsx\";\nimport React, { useState } from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/cutom-button.component';\nimport './sign-up.styles.scss';\nimport { connect } from 'react-redux';\nimport { signUpStart } from '../../redux/user/user.action';\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const _useState = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userData = _useState2[0],\n        setUserData = _useState2[1];\n\n  const displayName = userData.displayName,\n        email = userData.email,\n        password = userData.password,\n        confirmPassword = userData.confirmPassword;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert('passwords don\\'t match');\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    setUserData(_objectSpread({}, userData, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-up\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"I do not have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Sign up with your email and password\"), React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: handleChange,\n    label: \"Display Name\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"SIGN UP\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: data => dispatch(signUpStart(data))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/vladyslavzuiev/Desktop/Udemy/crwn-clothing/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","FormInput","CustomButton","connect","signUpStart","SignUp","displayName","email","password","confirmPassword","userData","setUserData","handleSubmit","event","preventDefault","alert","handleChange","target","name","value","mapDispatchToProps","dispatch","data"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'; \nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/cutom-button.component';\nimport './sign-up.styles.scss'; \nimport { connect } from 'react-redux';\nimport { signUpStart } from '../../redux/user/user.action'; \n\nconst SignUp = ({signUpStart}) => {\n    const [userData, setUserData] = useState({displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''});\n\n    const { displayName, email, password, confirmPassword} = userData;\n\n    const handleSubmit = async event => {\n        event.preventDefault(); \n        \n     \n        if(password !== confirmPassword){\n            alert('passwords don\\'t match');\n            return;\n        }\n        signUpStart({displayName, email, password});\n        \n    }\n\n    const handleChange = (event) => {\n        const {name, value} = event.target;\n        setUserData({...userData, [name]: value})\n    } \n    return (<div className='sign-up'>\n        <h2 className='title'>I do not have an account</h2>\n        <span>Sign up with your email and password</span>\n        <form className='sign-up-form' onSubmit={handleSubmit}>\n            <FormInput type='text' name='displayName' value={displayName} onChange={handleChange} label='Display Name' required/>\n            <FormInput type='email' name='email' value={email} onChange={handleChange} label='Email' required/>\n            <FormInput type='password' name='password' value={password} onChange={handleChange} label='Password' required/>\n            <FormInput type='password' name='confirmPassword' value={confirmPassword} onChange={handleChange} label='Confirm Password' required/>\n            <CustomButton type='submit'>SIGN UP</CustomButton>\n        </form>\n    </div>)\n    \n}\n\nconst mapDispatchToProps = dispatch => ({\n    signUpStart: (data) => dispatch(signUpStart(data))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}
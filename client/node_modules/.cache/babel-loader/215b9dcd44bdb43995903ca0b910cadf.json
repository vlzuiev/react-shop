{"ast":null,"code":"import _defineProperty from \"/Users/vladyslavzuiev/Desktop/Udemy/crwn-clothing/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// import { debug } from \"util\";\nexport const addItemToCart = (cartItems, cartItemToAdd) => {\n  const existingCatItem = cartItems.find(cartItem => cartItem.id === cartItemToAdd.id);\n\n  if (existingCatItem) {\n    let items = cartItems.map(item => item.id === cartItemToAdd.id ? _objectSpread({}, item, {\n      quantity: item.quantity + 1\n    }) : item);\n    return items;\n  }\n\n  return [...cartItems, _objectSpread({}, cartItemToAdd, {\n    quantity: 1\n  })];\n};\nexport const deleteOneItemFromCart = (cartItems, cartItemToDelete) => {\n  const existingCatItem = cartItems.find(cartItem => cartItem.id === cartItemToDelete.id);\n\n  if (existingCatItem) {\n    let items = cartItems.map(item => {\n      if (item.id === cartItemToDelete.id && item.quantity > 1) {\n        return _objectSpread({}, item, {\n          quantity: item.quantity - 1\n        });\n      } else if (item.id === cartItemToDelete.id && item.quantity === 1) {\n        return null;\n      } else {\n        return item;\n      }\n    });\n    let filetredItems = items.filter(item => typeof item !== 'undefined');\n    return filetredItems;\n  }\n\n  return [...cartItems];\n};","map":{"version":3,"sources":["/Users/vladyslavzuiev/Desktop/Udemy/crwn-clothing/src/redux/cart/cart.utils.js"],"names":["addItemToCart","cartItems","cartItemToAdd","existingCatItem","find","cartItem","id","items","map","item","quantity","deleteOneItemFromCart","cartItemToDelete","filetredItems","filter"],"mappings":";;;;;;AAEA;AACA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,aAAZ,KAA8B;AACvD,QAAMC,eAAe,GAAGF,SAAS,CAACG,IAAV,CAAeC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EAAzD,CAAxB;;AAEA,MAAGH,eAAH,EAAmB;AACf,QAAII,KAAK,GAAGN,SAAS,CAACO,GAAV,CAAcC,IAAI,IAAIA,IAAI,CAACH,EAAL,KAAYJ,aAAa,CAACI,EAA1B,qBACxBG,IADwB;AAClBC,MAAAA,QAAQ,EAAED,IAAI,CAACC,QAAL,GAAgB;AADR,SAE5BD,IAFM,CAAZ;AAGA,WAAOF,KAAP;AACH;;AACD,SAAO,CAAC,GAAGN,SAAJ,oBAAmBC,aAAnB;AAAkCQ,IAAAA,QAAQ,EAAE;AAA5C,KAAP;AACH,CAVM;AAaP,OAAO,MAAMC,qBAAqB,GAAG,CAACV,SAAD,EAAYW,gBAAZ,KAAiC;AAClE,QAAMT,eAAe,GAAGF,SAAS,CAACG,IAAV,CAAeC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBM,gBAAgB,CAACN,EAA5D,CAAxB;;AAEA,MAAGH,eAAH,EAAmB;AACf,QAAII,KAAK,GAAGN,SAAS,CAACO,GAAV,CAAcC,IAAI,IAAI;AAC9B,UAAGA,IAAI,CAACH,EAAL,KAAYM,gBAAgB,CAACN,EAA7B,IAAmCG,IAAI,CAACC,QAAL,GAAgB,CAAtD,EAAwD;AACpD,iCAAWD,IAAX;AAAiBC,UAAAA,QAAQ,EAAED,IAAI,CAACC,QAAL,GAAgB;AAA3C;AACH,OAFD,MAEQ,IAAGD,IAAI,CAACH,EAAL,KAAYM,gBAAgB,CAACN,EAA7B,IAAmCG,IAAI,CAACC,QAAL,KAAkB,CAAxD,EAA2D;AAC/D,eAAO,IAAP;AACH,OAFO,MAEH;AACD,eAAOD,IAAP;AACH;AACJ,KARW,CAAZ;AASA,QAAII,aAAa,GAAGN,KAAK,CAACO,MAAN,CAAaL,IAAI,IAAI,OAAOA,IAAP,KAAiB,WAAtC,CAApB;AAEA,WAAOI,aAAP;AAGH;;AACD,SAAO,CAAC,GAAGZ,SAAJ,CAAP;AACH,CApBM","sourcesContent":["\n\n// import { debug } from \"util\";\nexport const addItemToCart = (cartItems, cartItemToAdd) => { \n    const existingCatItem = cartItems.find(cartItem => cartItem.id === cartItemToAdd.id);\n     \n    if(existingCatItem){\n        let items = cartItems.map(item => item.id === cartItemToAdd.id \n            ? {...item, quantity: item.quantity + 1} \n            : item); \n        return items;\n    }  \n    return [...cartItems, {...cartItemToAdd, quantity: 1}]\n} \n\n\nexport const deleteOneItemFromCart = (cartItems, cartItemToDelete) => {\n    const existingCatItem = cartItems.find(cartItem => cartItem.id === cartItemToDelete.id);\n\n    if(existingCatItem){\n        let items = cartItems.map(item => { \n            if(item.id === cartItemToDelete.id && item.quantity > 1){\n                return {...item, quantity: item.quantity - 1 };\n            }  else if(item.id === cartItemToDelete.id && item.quantity === 1) {\n                return null;\n            }else{\n                return item;\n            }\n        }); \n        let filetredItems = items.filter(item => typeof(item) !== 'undefined');\n\n        return filetredItems;\n\n\n    }  \n    return [...cartItems]\n}"]},"metadata":{},"sourceType":"module"}
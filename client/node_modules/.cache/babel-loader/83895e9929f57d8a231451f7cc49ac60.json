{"ast":null,"code":"import _defineProperty from \"/Users/vladyslavzuiev/Desktop/Udemy/crwn-clothing/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBfu9wpv60Z5uYXbFJod7rQwIr_Pf8-Rek\",\n  authDomain: \"firstprj-cbc75.firebaseapp.com\",\n  databaseURL: \"https://firstprj-cbc75.firebaseio.com\",\n  projectId: \"firstprj-cbc75\",\n  storageBucket: \"firstprj-cbc75.appspot.com\",\n  messagingSenderId: \"11013486235\",\n  appId: \"1:11013486235:web:aa5f789f6814a6dbfef83e\",\n  measurementId: \"G-FXK8Y532CX\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(\"users/\".concat(userAuth.uid));\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const displayName = userAuth.displayName,\n          email = userAuth.email;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set(_objectSpread({\n        displayName,\n        email,\n        createdAt\n      }, additionalData));\n    } catch (err) {\n      console.log(\"Error during creation: \".concat(err));\n    }\n  }\n\n  return userRef;\n};\n\nconst convertCollectionsSnapshotToMap = collections => {\n  const transformedCollection = collections.docs.map(doc => {\n    const _doc$data = doc.data(),\n          title = _doc$data.title,\n          items = _doc$data.items;\n  });\n};\n\nfirebase.initializeApp(firebaseConfig);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  promt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/vladyslavzuiev/Desktop/Udemy/crwn-clothing/src/firebase/firebase.utils.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createdAt","Date","set","err","console","log","convertCollectionsSnapshotToMap","collections","transformedCollection","docs","map","data","title","items","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","promt","signInWithGoogle","signInWithPopup"],"mappings":";;;;;;AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,gCAFO;AAGnBC,EAAAA,WAAW,EAAE,uCAHM;AAInBC,EAAAA,SAAS,EAAE,gBAJQ;AAKnBC,EAAAA,aAAa,EAAE,4BALI;AAMnBC,EAAAA,iBAAiB,EAAE,aANA;AAOnBC,EAAAA,KAAK,EAAE,0CAPY;AAQnBC,EAAAA,aAAa,EAAE;AARI,CAAvB;AAWA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E,MAAG,CAACD,QAAJ,EAAc;AAEd,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,iBAAuBJ,QAAQ,CAACK,GAAhC,EAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AAEA,MAAG,CAACD,QAAQ,CAACE,MAAb,EAAoB;AAAA,UACVC,WADU,GACaT,QADb,CACVS,WADU;AAAA,UACGC,KADH,GACaV,QADb,CACGU,KADH;AAElB,UAAMC,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAG;AACD,YAAMV,OAAO,CAACW,GAAR;AAAaJ,QAAAA,WAAb;AAA0BC,QAAAA,KAA1B;AAAiCC,QAAAA;AAAjC,SAA+CV,cAA/C,EAAN;AACD,KAFD,CAGA,OAAMa,GAAN,EAAU;AACRC,MAAAA,OAAO,CAACC,GAAR,kCAAsCF,GAAtC;AACD;AACF;;AACD,SAAOZ,OAAP;AACD,CAlBM;;AAoBP,MAAMe,+BAA+B,GAAIC,WAAD,IAAiB;AACvD,QAAMC,qBAAqB,GAAGD,WAAW,CAACE,IAAZ,CAAiBC,GAAjB,CAAqBjB,GAAG,IAAI;AAAA,sBAC/BA,GAAG,CAACkB,IAAJ,EAD+B;AAAA,UAChDC,KADgD,aAChDA,KADgD;AAAA,UACzCC,KADyC,aACzCA,KADyC;AAEzD,GAF6B,CAA9B;AAGD,CAJD;;AAOAnC,QAAQ,CAACoC,aAAT,CAAuBnC,cAAvB;AAEA,OAAO,MAAMoC,IAAI,GAAGrC,QAAQ,CAACqC,IAAT,EAAb;AACP,OAAO,MAAMvB,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AAEP,MAAMwB,QAAQ,GAAG,IAAItC,QAAQ,CAACqC,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,KAAK,EAAE;AAAR,CAA7B;AAEA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAetC,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth'; \n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBfu9wpv60Z5uYXbFJod7rQwIr_Pf8-Rek\",\n    authDomain: \"firstprj-cbc75.firebaseapp.com\",\n    databaseURL: \"https://firstprj-cbc75.firebaseio.com\",\n    projectId: \"firstprj-cbc75\",\n    storageBucket: \"firstprj-cbc75.appspot.com\",\n    messagingSenderId: \"11013486235\",\n    appId: \"1:11013486235:web:aa5f789f6814a6dbfef83e\",\n    measurementId: \"G-FXK8Y532CX\"\n  };\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if(!userAuth) return;\n \n  const userRef = firestore.doc(`users/${userAuth.uid}`); \n  const snapShot = await userRef.get();  \n\n  if(!snapShot.exists){\n    const { displayName, email } = userAuth;\n    const createdAt = new Date();\n\n    try{\n      await userRef.set({displayName, email, createdAt, ...additionalData})\n    }\n    catch(err){\n      console.log(`Error during creation: ${err}`);\n    }\n  } \n  return userRef;\n}\n\nconst convertCollectionsSnapshotToMap = (collections) => {\n  const transformedCollection = collections.docs.map(doc => {\n    const { title, items } = doc.data();\n  })\n}\n \n\nfirebase.initializeApp(firebaseConfig);\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({promt: 'select_account'});\n\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;"]},"metadata":{},"sourceType":"module"}
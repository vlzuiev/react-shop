{"ast":null,"code":"import _objectSpread from \"/Users/vladyslavzuiev/Desktop/Udemy/crwn-clothing/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserTypes from './user.types';\nimport { googleProvider, auth, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { googleSignInSuccess, googleSignInFailure, emailSignInSuccess, emailSignInFailure } from './user.action';\nexport function* signInWithGoogle() {\n  try {\n    const _ref = yield auth.signInWithPopup(googleProvider),\n          user = _ref.user;\n\n    const userRef = yield call(createUserProfileDocument, user);\n    const userSnapshot = yield userRef.get();\n    yield put(googleSignInSuccess(_objectSpread({\n      id: userSnapshot.id\n    }, userSnapshot.data())));\n  } catch (err) {\n    yield put(googleSignInFailure(err));\n  }\n}\nexport function* signInWithEmail() {\n  try {} catch (err) {\n    yield put(googleSignInFailure(emailSignInFailure));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserTypes.GOOGLE_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([onGoogleSignInStart()]);\n}","map":{"version":3,"sources":["/Users/vladyslavzuiev/Desktop/Udemy/crwn-clothing/src/redux/user/user.saga.js"],"names":["takeLatest","put","all","call","UserTypes","googleProvider","auth","createUserProfileDocument","googleSignInSuccess","googleSignInFailure","emailSignInSuccess","emailSignInFailure","signInWithGoogle","signInWithPopup","user","userRef","userSnapshot","get","id","data","err","signInWithEmail","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","userSagas"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAASC,cAAT,EAAyBC,IAAzB,EAA+BC,yBAA/B,QAAgE,+BAAhE;AACA,SAASC,mBAAT,EAA8BC,mBAA9B,EAAmDC,kBAAnD,EAAuEC,kBAAvE,QAAiG,eAAjG;AAEA,OAAO,UAAUC,gBAAV,GAA6B;AAChC,MAAI;AAAA,iBACe,MAAMN,IAAI,CAACO,eAAL,CAAqBR,cAArB,CADrB;AAAA,UACOS,IADP,QACOA,IADP;;AAEA,UAAMC,OAAO,GAAG,MAAMZ,IAAI,CAACI,yBAAD,EAA4BO,IAA5B,CAA1B;AAEA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMhB,GAAG,CAACO,mBAAmB;AAAGU,MAAAA,EAAE,EAAEF,YAAY,CAACE;AAApB,OAA2BF,YAAY,CAACG,IAAb,EAA3B,EAApB,CAAT;AACH,GAND,CAME,OAAOC,GAAP,EAAY;AACV,UAAMnB,GAAG,CAACQ,mBAAmB,CAACW,GAAD,CAApB,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,eAAV,GAA2B;AAC9B,MAAG,CAEF,CAFD,CAEC,OAAMD,GAAN,EAAU;AACP,UAAMnB,GAAG,CAACQ,mBAAmB,CAACE,kBAAD,CAApB,CAAT;AACH;AACJ;AAED,OAAO,UAAUW,mBAAV,GAAgC;AACnC,QAAMtB,UAAU,CACZI,SAAS,CAACmB,oBADE,EAEZX,gBAFY,CAAhB;AAIH;AAED,OAAO,UAAUY,kBAAV,GAA8B;AACjC,QAAMxB,UAAU,CACZI,SAAS,CAACmB,oBADE,EAEZF,eAFY,CAAhB;AAIH;AAED,OAAO,UAAUI,SAAV,GAAsB;AACzB,QAAMvB,GAAG,CAAC,CAACoB,mBAAmB,EAApB,CAAD,CAAT;AACH","sourcesContent":["import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserTypes from './user.types';\nimport { googleProvider, auth, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { googleSignInSuccess, googleSignInFailure, emailSignInSuccess, emailSignInFailure } from './user.action';\n\nexport function* signInWithGoogle() {\n    try {\n        const {user} = yield auth.signInWithPopup(googleProvider);\n        const userRef = yield call(createUserProfileDocument, user);\n\n        const userSnapshot = yield userRef.get();\n        yield put(googleSignInSuccess({ id: userSnapshot.id, ...userSnapshot.data()}));\n    } catch (err) {\n        yield put(googleSignInFailure(err))\n    }\n}\n\nexport function* signInWithEmail(){\n    try{\n\n    }catch(err){\n        yield put(googleSignInFailure(emailSignInFailure))\n    }\n}\n\nexport function* onGoogleSignInStart() {\n    yield takeLatest(\n        UserTypes.GOOGLE_SIGN_IN_START,\n        signInWithGoogle\n    )\n}\n\nexport function* onEmailSignInStart(){\n    yield takeLatest(\n        UserTypes.GOOGLE_SIGN_IN_START,\n        signInWithEmail\n    )\n}\n\nexport function* userSagas() {\n    yield all([onGoogleSignInStart()])\n}\n"]},"metadata":{},"sourceType":"module"}